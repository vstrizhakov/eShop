// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShop.Distribution.DbContexts;

#nullable disable

namespace eShop.Distribution.Migrations
{
    [DbContext(typeof(DistributionDbContext))]
    [Migration("20230701200435_ViberChatsTableAdded")]
    partial class ViberChatsTableAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eShop.Distribution.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("eShop.Distribution.Entities.TelegramChat", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TelegramChatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("AccountId", "TelegramChatId");

                    b.ToTable("TelegramChats");
                });

            modelBuilder.Entity("eShop.Distribution.Entities.ViberChat", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ViberUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("AccountId", "ViberUserId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("ViberChats");
                });

            modelBuilder.Entity("eShop.Distribution.Entities.TelegramChat", b =>
                {
                    b.HasOne("eShop.Distribution.Entities.Account", "Account")
                        .WithMany("TelegramChats")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("eShop.Distribution.Entities.ViberChat", b =>
                {
                    b.HasOne("eShop.Distribution.Entities.Account", "Account")
                        .WithOne("ViberChat")
                        .HasForeignKey("eShop.Distribution.Entities.ViberChat", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("eShop.Distribution.Entities.Account", b =>
                {
                    b.Navigation("TelegramChats");

                    b.Navigation("ViberChat");
                });
#pragma warning restore 612, 618
        }
    }
}
